.aws_secrets: &deploy_job_secrets
  - apt-get install -y jq
  - aws sts assume-role-with-web-identity --role-arn ${roleArn} --role-session-name "$CI_SERVER_NAME-$CI_PROJECT_ID-$CI_JOB_ID" --web-identity-token $CI_JOB_JWT_V2 --duration-seconds 900 > output.json
  - export AWS_ACCESS_KEY_ID=$(jq --raw-output '.Credentials.AccessKeyId' output.json)
  - export AWS_SECRET_ACCESS_KEY=$(jq --raw-output '.Credentials.SecretAccessKey' output.json)
  - export AWS_SESSION_TOKEN=$(jq --raw-output '.Credentials.SessionToken' output.json)
  - export TF_VAR_accountid=$ACCOUNT_ID
  - export TF_VAR_region=$AWS_DEFAULT_REGION

.deploy_job_template: &deploy_job_template
  image: registry.gitlab.com/iairgroup/iag/utl/framework/gitlab/artifact-repository-group/artifact-repository/awscli-terraform-image:2
  before_script:
    - *deploy_job_secrets
  script:
    - terraform init
    - terraform apply -input=false -auto-approve -var-file="$CI_ENVIRONMENT_NAME.tfvars"

stages:
  - DEV_DEPLOY
  - SIT_DEPLOY
  - PRL_DEPLOY
  - LIVE_DEPLOY

dev-deploy:
  stage: DEV_DEPLOY
  variables:
    roleArn: $dev_ROLE_ARN
  <<: *deploy_job_template
  environment:
    name: dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual

